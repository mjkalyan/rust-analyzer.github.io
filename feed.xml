<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust-analyzer</title>
    <description>rust-analyzer: building a better Rust IDE</description>
    <link>https://rust-analyzer.github.io//</link>
    <atom:link href="https://rust-analyzer.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 31 May 2021 07:05:04 +0000</pubDate>
    <lastBuildDate>Mon, 31 May 2021 07:05:04 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Changelog #79</title>
        <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/05/31/changelog-79.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/05/31/changelog-79.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/f4383981249d3f2964f2c667f3349f8ff15b77c4&quot;&gt;&lt;code&gt;f438398&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-05-31&quot;&gt;&lt;code&gt;2021-05-31&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8955&quot;&gt;&lt;code&gt;#8955&lt;/code&gt;&lt;/a&gt; add support for standalone Rust files:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/2690773/119277037-0b579380-bc26-11eb-8d77-20d46ab4916a.gif&quot; alt=&quot;119277037 0b579380 bc26 11eb 8d77 20d46ab4916a&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8988&quot;&gt;&lt;code&gt;#8988&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8990&quot;&gt;&lt;code&gt;#8990&lt;/code&gt;&lt;/a&gt; support &quot;Go to implementations&quot; on trait functions and associated constants:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/6652840/119501981-45a45c00-bd1e-11eb-8336-9145f2888643.gif&quot; alt=&quot;119501981 45a45c00 bd1e 11eb 8336 9145f2888643&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8942&quot;&gt;&lt;code&gt;#8942&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8996&quot;&gt;&lt;code&gt;#8996&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;library&lt;/code&gt; semantic token modifier to items from other crates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8767&quot;&gt;&lt;code&gt;#8767&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9028&quot;&gt;&lt;code&gt;#9028&lt;/code&gt;&lt;/a&gt; implement range formatting (requires nightly &lt;code&gt;rustfmt&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9012&quot;&gt;&lt;code&gt;#9012&lt;/code&gt;&lt;/a&gt; add tab stops for keyword completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9027&quot;&gt;&lt;code&gt;#9027&lt;/code&gt;&lt;/a&gt; make attribute completion is context aware.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8995&quot;&gt;&lt;code&gt;#8995&lt;/code&gt;&lt;/a&gt; create tasks for all workspaces (VS Code only):&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/2690773/119575273-74264380-bdbf-11eb-8283-a78bbcb7346e.png&quot; alt=&quot;119575273 74264380 bdbf 11eb 8283 a78bbcb7346e&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9038&quot;&gt;&lt;code&gt;#9038&lt;/code&gt;&lt;/a&gt; add folding range for return types:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/48062697/119979082-5c62e100-bfb2-11eb-9729-1dea1ce74de1.gif&quot; alt=&quot;119979082 5c62e100 bfb2 11eb 9729 1dea1ce74de1&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8968&quot;&gt;&lt;code&gt;#8968&lt;/code&gt;&lt;/a&gt; (first contribution) fix binary installation instructions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8967&quot;&gt;&lt;code&gt;#8967&lt;/code&gt;&lt;/a&gt; (first contribution) fix cursor position after move item command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8994&quot;&gt;&lt;code&gt;#8994&lt;/code&gt;&lt;/a&gt; (first contribution) check for subdirectories in VFS loader exclusions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9051&quot;&gt;&lt;code&gt;#9051&lt;/code&gt;&lt;/a&gt; (first contribution) fix swapped config descriptions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8959&quot;&gt;&lt;code&gt;#8959&lt;/code&gt;&lt;/a&gt; fix downloading the server binary on Windows again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9046&quot;&gt;&lt;code&gt;#9046&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;include!&lt;/code&gt; and other eager macros work in expression position.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8970&quot;&gt;&lt;code&gt;#8970&lt;/code&gt;&lt;/a&gt; duplicate dependencies that have multiple &lt;code&gt;DepKinds&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8975&quot;&gt;&lt;code&gt;#8975&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;todo!()&lt;/code&gt; as placeholder body for generated match arms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8983&quot;&gt;&lt;code&gt;#8983&lt;/code&gt;&lt;/a&gt; fix type mismatch caused by macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8986&quot;&gt;&lt;code&gt;#8986&lt;/code&gt;&lt;/a&gt; add &quot;Go to type definition&quot; for struct fields within struct.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8989&quot;&gt;&lt;code&gt;#8989&lt;/code&gt;&lt;/a&gt; try to fix type inference for the new &lt;code&gt;Try&lt;/code&gt; trait.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8987&quot;&gt;&lt;code&gt;#8987&lt;/code&gt;&lt;/a&gt; fix lowering of &lt;code&gt;FnOnce()&lt;/code&gt; without return type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8991&quot;&gt;&lt;code&gt;#8991&lt;/code&gt;&lt;/a&gt; consider trait to be in scope for trait impls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8993&quot;&gt;&lt;code&gt;#8993&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t show &lt;code&gt;pd&lt;/code&gt;/&lt;code&gt;ppd&lt;/code&gt; completions where they shouldn&amp;#8217;t be.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9008&quot;&gt;&lt;code&gt;#9008&lt;/code&gt;&lt;/a&gt; remove undesired completions from trait/impl blocks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9026&quot;&gt;&lt;code&gt;#9026&lt;/code&gt;&lt;/a&gt; complete modules in associated item lists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9033&quot;&gt;&lt;code&gt;#9033&lt;/code&gt;&lt;/a&gt; complete keywords in &lt;code&gt;(Assoc)ItemList&lt;/code&gt; with leading attribute.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9059&quot;&gt;&lt;code&gt;#9059&lt;/code&gt;&lt;/a&gt; only complete derive proc macros in &lt;code&gt;#[derive]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9064&quot;&gt;&lt;code&gt;#9064&lt;/code&gt;&lt;/a&gt; fix incorrect &lt;code&gt;prefer_inner&lt;/code&gt; calls on some attribute completions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9020&quot;&gt;&lt;code&gt;#9020&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t complete non-macro item paths in impls and modules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9032&quot;&gt;&lt;code&gt;#9032&lt;/code&gt;&lt;/a&gt; only complete modules in empty use-statements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9002&quot;&gt;&lt;code&gt;#9002&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9037&quot;&gt;&lt;code&gt;#9037&lt;/code&gt;&lt;/a&gt; move annotations below item attributes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9054&quot;&gt;&lt;code&gt;#9054&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;matches!&lt;/code&gt; macro on nightly toolchains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9050&quot;&gt;&lt;code&gt;#9050&lt;/code&gt;&lt;/a&gt; &lt;code&gt;hir_ty&lt;/code&gt;: use async ret type for inference inside async bodies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9065&quot;&gt;&lt;code&gt;#9065&lt;/code&gt;&lt;/a&gt; &lt;code&gt;hir_ty&lt;/code&gt;: don&amp;#8217;t pass where clauses of associated types down to &lt;code&gt;chalk&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8973&quot;&gt;&lt;code&gt;#8973&lt;/code&gt;&lt;/a&gt; move diagnostics to &lt;code&gt;hir&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8965&quot;&gt;&lt;code&gt;#8965&lt;/code&gt;&lt;/a&gt; intern &lt;code&gt;TypeBound&lt;/code&gt; and &lt;code&gt;GenericArgs&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8978&quot;&gt;&lt;code&gt;#8978&lt;/code&gt;&lt;/a&gt; intern &lt;code&gt;AttrInput&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9017&quot;&gt;&lt;code&gt;#9017&lt;/code&gt;&lt;/a&gt; reduce the number of traits passed through &lt;code&gt;chalk&lt;/code&gt; during applicable trait lookup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8976&quot;&gt;&lt;code&gt;#8976&lt;/code&gt;&lt;/a&gt; rename &lt;code&gt;hypothetical&lt;/code&gt; to &lt;code&gt;speculative&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8977&quot;&gt;&lt;code&gt;#8977&lt;/code&gt;&lt;/a&gt; minor &lt;code&gt;TokenMap&lt;/code&gt; cleanups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9005&quot;&gt;&lt;code&gt;#9005&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9003&quot;&gt;&lt;code&gt;#9003&lt;/code&gt;&lt;/a&gt; document semantic token types and modifiers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9007&quot;&gt;&lt;code&gt;#9007&lt;/code&gt;&lt;/a&gt; fix some &lt;code&gt;clippy::redundant_clone&lt;/code&gt; warnings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9014&quot;&gt;&lt;code&gt;#9014&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9018&quot;&gt;&lt;code&gt;#9018&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9019&quot;&gt;&lt;code&gt;#9019&lt;/code&gt;&lt;/a&gt; simplify &lt;code&gt;CompletionContext&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9068&quot;&gt;&lt;code&gt;#9068&lt;/code&gt;&lt;/a&gt; move more &lt;code&gt;CompletionContext&lt;/code&gt; fields to &lt;code&gt;ImmediateLocation&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9015&quot;&gt;&lt;code&gt;#9015&lt;/code&gt;&lt;/a&gt; merge pattern completion related bools into an enum.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9016&quot;&gt;&lt;code&gt;#9016&lt;/code&gt;&lt;/a&gt; set &lt;code&gt;record_pat_syntax&lt;/code&gt; more precisely in &lt;code&gt;CompletionContext&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9041&quot;&gt;&lt;code&gt;#9041&lt;/code&gt;&lt;/a&gt; implement previous sibling determination for &lt;code&gt;CompletionContext&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9021&quot;&gt;&lt;code&gt;#9021&lt;/code&gt;&lt;/a&gt; explain the motivation behind early configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8997&quot;&gt;&lt;code&gt;#8997&lt;/code&gt;&lt;/a&gt; stop expanding &lt;code&gt;UseTrees&lt;/code&gt; during &lt;code&gt;ItemTree&lt;/code&gt; lowering.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9024&quot;&gt;&lt;code&gt;#9024&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t store supertraits in &lt;code&gt;ItemTree&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9036&quot;&gt;&lt;code&gt;#9036&lt;/code&gt;&lt;/a&gt; remove undocumented &lt;code&gt;TextDocumentSyncKind::Full&lt;/code&gt; support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9048&quot;&gt;&lt;code&gt;#9048&lt;/code&gt;&lt;/a&gt; add some lint completion tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/9057&quot;&gt;&lt;code&gt;#9057&lt;/code&gt;&lt;/a&gt; thread proc macro types through the HIR.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #78</title>
        <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/05/24/changelog-78.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/05/24/changelog-78.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/495c9586ec51e0cf9b06397d99ec4f65c55e7a28&quot;&gt;&lt;code&gt;495c958&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-05-24&quot;&gt;&lt;code&gt;2021-05-24&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/7698&quot;&gt;&lt;code&gt;#7698&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8877&quot;&gt;&lt;code&gt;#8877&lt;/code&gt;&lt;/a&gt; (first contribution) add new LSP extension for workspace symbol lookup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8873&quot;&gt;&lt;code&gt;#8873&lt;/code&gt;&lt;/a&gt; implement import granularity guessing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8948&quot;&gt;&lt;code&gt;#8948&lt;/code&gt;&lt;/a&gt; &quot;Generate getter&quot; assist places the cursor at the generated function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8953&quot;&gt;&lt;code&gt;#8953&lt;/code&gt;&lt;/a&gt; &quot;Generate getter&quot; avoids generating types like &lt;code&gt;&amp;amp;Vec&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8345&quot;&gt;&lt;code&gt;#8345&lt;/code&gt;&lt;/a&gt; (first contribution) add &lt;code&gt;pub mod&lt;/code&gt; option to the &quot;Unlinked file&quot; diagnostic fix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8766&quot;&gt;&lt;code&gt;#8766&lt;/code&gt;&lt;/a&gt; (first contribution) add &lt;code&gt;async&lt;/code&gt; if required in &quot;Extract function&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8945&quot;&gt;&lt;code&gt;#8945&lt;/code&gt;&lt;/a&gt; make expected type work in more situations:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/906069/119269023-dd5a5b00-bbf5-11eb-993a-b6e122c3b9a6.png&quot; alt=&quot;119269023 dd5a5b00 bbf5 11eb 993a b6e122c3b9a6&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/906069/119269025-dfbcb500-bbf5-11eb-983c-fc415b8428e0.png&quot; alt=&quot;119269025 dfbcb500 bbf5 11eb 983c fc415b8428e0&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8795&quot;&gt;&lt;code&gt;#8795&lt;/code&gt;&lt;/a&gt; allow semantic tokens for strings to be disabled.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8858&quot;&gt;&lt;code&gt;#8858&lt;/code&gt;&lt;/a&gt; ignore macro imports from &lt;code&gt;extern crate self&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8863&quot;&gt;&lt;code&gt;#8863&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t add extra whitespace around fields.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8880&quot;&gt;&lt;code&gt;#8880&lt;/code&gt;&lt;/a&gt; fix module renaming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8875&quot;&gt;&lt;code&gt;#8875&lt;/code&gt;&lt;/a&gt; avoid false positive &quot;Missing match arm&quot; when an or-pattern has mismatched types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8884&quot;&gt;&lt;code&gt;#8884&lt;/code&gt;&lt;/a&gt; fix &quot;Add explicit type&quot; producing invalid code on &lt;code&gt;@&lt;/code&gt; patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8893&quot;&gt;&lt;code&gt;#8893&lt;/code&gt;&lt;/a&gt; update outdated auto-import documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8902&quot;&gt;&lt;code&gt;#8902&lt;/code&gt;&lt;/a&gt; fix code completion not inserting borrow text when client supports &lt;code&gt;InsertAndReplace&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8910&quot;&gt;&lt;code&gt;#8910&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t hang on unresolved attribute on extern block and its children.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8918&quot;&gt;&lt;code&gt;#8918&lt;/code&gt;&lt;/a&gt; fix hang caused by non-unique attribute IDs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8901&quot;&gt;&lt;code&gt;#8901&lt;/code&gt;&lt;/a&gt; speed up &lt;code&gt;fill_match_arms&lt;/code&gt; on tuples of large enums.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8935&quot;&gt;&lt;code&gt;#8935&lt;/code&gt;&lt;/a&gt; mention &lt;code&gt;rust-tools.nvim&lt;/code&gt; for &lt;code&gt;nvim-lsp&lt;/code&gt; in the manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8936&quot;&gt;&lt;code&gt;#8936&lt;/code&gt;&lt;/a&gt; improve nightly downloads with better local state management.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8940&quot;&gt;&lt;code&gt;#8940&lt;/code&gt;&lt;/a&gt; give &lt;code&gt;unsafe&lt;/code&gt; semantic token modifier to unsafe traits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8947&quot;&gt;&lt;code&gt;#8947&lt;/code&gt;&lt;/a&gt; correctly resolve crate name in use paths when import shadows it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8856&quot;&gt;&lt;code&gt;#8856&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8921&quot;&gt;&lt;code&gt;#8921&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8938&quot;&gt;&lt;code&gt;#8938&lt;/code&gt;&lt;/a&gt; use Chalk for unification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8862&quot;&gt;&lt;code&gt;#8862&lt;/code&gt;&lt;/a&gt; reorganize module structure of fixits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8871&quot;&gt;&lt;code&gt;#8871&lt;/code&gt;&lt;/a&gt; simplify &lt;code&gt;DefCollector::resolve_macros&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8882&quot;&gt;&lt;code&gt;#8882&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8887&quot;&gt;&lt;code&gt;#8887&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8888&quot;&gt;&lt;code&gt;#8888&lt;/code&gt;&lt;/a&gt; resolve attributes in name resolution (minimal version).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8885&quot;&gt;&lt;code&gt;#8885&lt;/code&gt;&lt;/a&gt; greatly simplify eager macro representation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8889&quot;&gt;&lt;code&gt;#8889&lt;/code&gt;&lt;/a&gt; track in-scope derive helpers during name resolution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8898&quot;&gt;&lt;code&gt;#8898&lt;/code&gt;&lt;/a&gt; resolve derive helpers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8900&quot;&gt;&lt;code&gt;#8900&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;#[register_attr]&lt;/code&gt; and &lt;code&gt;#[register_tool]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8914&quot;&gt;&lt;code&gt;#8914&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;StructDefKind&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8916&quot;&gt;&lt;code&gt;#8916&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8932&quot;&gt;&lt;code&gt;#8932&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;ItemTree&lt;/code&gt; pretty-printing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8868&quot;&gt;&lt;code&gt;#8868&lt;/code&gt;&lt;/a&gt; replace &lt;code&gt;AstTransformer&lt;/code&gt; with mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8922&quot;&gt;&lt;code&gt;#8922&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8923&quot;&gt;&lt;code&gt;#8923&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8924&quot;&gt;&lt;code&gt;#8924&lt;/code&gt;&lt;/a&gt; add more docs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8926&quot;&gt;&lt;code&gt;#8926&lt;/code&gt;&lt;/a&gt; drop uncompressed release artifacts and those following the old naming convention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8954&quot;&gt;&lt;code&gt;#8954&lt;/code&gt;&lt;/a&gt; document &lt;code&gt;ItemTree&lt;/code&gt; design.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #77</title>
        <pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/05/17/changelog-77.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/05/17/changelog-77.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/b82458818d44dfe5b4b5db38d8113e3f3194506e&quot;&gt;&lt;code&gt;b824588&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-05-17&quot;&gt;&lt;code&gt;2021-05-17&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8791&quot;&gt;&lt;code&gt;#8791&lt;/code&gt;&lt;/a&gt; auto-indent use tree lists:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/1786438/117665627-53e16c80-b1a3-11eb-8906-1b88b394367b.gif&quot; alt=&quot;117665627 53e16c80 b1a3 11eb 8906 1b88b394367b&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8801&quot;&gt;&lt;code&gt;#8801&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8807&quot;&gt;&lt;code&gt;#8807&lt;/code&gt;&lt;/a&gt; allow viewing the crate graph in a webview (VS Code only):&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/1786438/117831361-c4a48980-b274-11eb-9276-240cdf6919aa.png&quot; alt=&quot;117831361 c4a48980 b274 11eb 9276 240cdf6919aa&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8799&quot;&gt;&lt;code&gt;#8799&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8813&quot;&gt;&lt;code&gt;#8813&lt;/code&gt;&lt;/a&gt; add support for array lengths in types.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8802&quot;&gt;&lt;code&gt;#8802&lt;/code&gt;&lt;/a&gt; (first contribution) keep comments and attributes when extracting struct from enum variant.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8819&quot;&gt;&lt;code&gt;#8819&lt;/code&gt;&lt;/a&gt; (first contribution) use package root as &lt;code&gt;cargo check&lt;/code&gt; working directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8398&quot;&gt;&lt;code&gt;#8398&lt;/code&gt;&lt;/a&gt; fix inference with conditionally compiled tails.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8800&quot;&gt;&lt;code&gt;#8800&lt;/code&gt;&lt;/a&gt; make &quot;Pull assignment up&quot; assist work in more cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8805&quot;&gt;&lt;code&gt;#8805&lt;/code&gt;&lt;/a&gt; use Cargo target name as crate name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8806&quot;&gt;&lt;code&gt;#8806&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8808&quot;&gt;&lt;code&gt;#8808&lt;/code&gt;&lt;/a&gt; strip delimiters from function-like macro invocations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8812&quot;&gt;&lt;code&gt;#8812&lt;/code&gt;&lt;/a&gt; fix dependencies of build scripts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8820&quot;&gt;&lt;code&gt;#8820&lt;/code&gt;&lt;/a&gt; return absolute paths in &lt;code&gt;find_path&lt;/code&gt; if crate start is ambiguous.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8823&quot;&gt;&lt;code&gt;#8823&lt;/code&gt;&lt;/a&gt; enable task lists in &lt;code&gt;pulldown_cmark&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8814&quot;&gt;&lt;code&gt;#8814&lt;/code&gt;&lt;/a&gt; keep doc comments and outer attributes in &quot;Move module to file&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8830&quot;&gt;&lt;code&gt;#8830&lt;/code&gt;&lt;/a&gt; implement bulit-in &lt;code&gt;concat_idents!&lt;/code&gt; macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8831&quot;&gt;&lt;code&gt;#8831&lt;/code&gt;&lt;/a&gt; apply &lt;code&gt;async&lt;/code&gt; semantic token modifier to the &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; keywords.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8840&quot;&gt;&lt;code&gt;#8840&lt;/code&gt;&lt;/a&gt; fix false positive &quot;Missing match arm&quot; when a tuple pattern is shorter than scrutinee type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8845&quot;&gt;&lt;code&gt;#8845&lt;/code&gt;&lt;/a&gt; add default type parameters on &quot;Generate &lt;code&gt;Default&lt;/code&gt; from &lt;code&gt;new&lt;/code&gt; function&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8848&quot;&gt;&lt;code&gt;#8848&lt;/code&gt;&lt;/a&gt; attach comments to &lt;code&gt;ast::Impl&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8853&quot;&gt;&lt;code&gt;#8853&lt;/code&gt;&lt;/a&gt; tag &lt;code&gt;Self&lt;/code&gt; in impls as a type alias.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8793&quot;&gt;&lt;code&gt;#8793&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8825&quot;&gt;&lt;code&gt;#8825&lt;/code&gt;&lt;/a&gt; (first contributions) fix a couple of typos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8798&quot;&gt;&lt;code&gt;#8798&lt;/code&gt;&lt;/a&gt; use modern dependency resolver.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8796&quot;&gt;&lt;code&gt;#8796&lt;/code&gt;&lt;/a&gt; rewrite &lt;code&gt;#[derive]&lt;/code&gt; removal to be based on AST (take 2).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8837&quot;&gt;&lt;code&gt;#8837&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8838&quot;&gt;&lt;code&gt;#8838&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8854&quot;&gt;&lt;code&gt;#8854&lt;/code&gt;&lt;/a&gt; use mutable syntax trees in more places.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #76</title>
        <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/05/10/changelog-76.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/05/10/changelog-76.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/fd109fb587904cfecc1149e068814bfd38feb83c&quot;&gt;&lt;code&gt;fd109fb&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-05-10&quot;&gt;&lt;code&gt;2021-05-10&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8482&quot;&gt;&lt;code&gt;#8482&lt;/code&gt;&lt;/a&gt; (first contribution) explain how to customize &lt;code&gt;unsafe&lt;/code&gt; highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8674&quot;&gt;&lt;code&gt;#8674&lt;/code&gt;&lt;/a&gt; (first contribution) add folding of multi-line &lt;code&gt;where&lt;/code&gt; clauses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8759&quot;&gt;&lt;code&gt;#8759&lt;/code&gt;&lt;/a&gt; (first contribution) add Kate installation steps to the user manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8774&quot;&gt;&lt;code&gt;#8774&lt;/code&gt;&lt;/a&gt; respect &lt;code&gt;.cargo/config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/3757771/117545448-1dcaae00-b026-11eb-977a-0f35a5e3f2e0.gif&quot; alt=&quot;117545448 1dcaae00 b026 11eb 977a 0f35a5e3f2e0&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8784&quot;&gt;&lt;code&gt;#8784&lt;/code&gt;&lt;/a&gt; auto-insert &lt;code&gt;}&lt;/code&gt; when typing &lt;code&gt;{&lt;/code&gt; in use item:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/1786438/117585742-45983f80-b114-11eb-80fc-d44f480fd012.gif&quot; alt=&quot;117585742 45983f80 b114 11eb 80fc d44f480fd012&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8710&quot;&gt;&lt;code&gt;#8710&lt;/code&gt;&lt;/a&gt; build releases with LTO (link-time optimization).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8761&quot;&gt;&lt;code&gt;#8761&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8763&quot;&gt;&lt;code&gt;#8763&lt;/code&gt;&lt;/a&gt; improve troubleshooting guide.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8712&quot;&gt;&lt;code&gt;#8712&lt;/code&gt;&lt;/a&gt; fix panic in the &quot;Sort methods&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8715&quot;&gt;&lt;code&gt;#8715&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;CompletionContext::expected_type&lt;/code&gt; smarter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8711&quot;&gt;&lt;code&gt;#8711&lt;/code&gt;&lt;/a&gt; only resolve the selected assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8719&quot;&gt;&lt;code&gt;#8719&lt;/code&gt;&lt;/a&gt; fix block comment intra-doc link injection ranges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8731&quot;&gt;&lt;code&gt;#8731&lt;/code&gt;&lt;/a&gt; complete enum variants through type aliases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8742&quot;&gt;&lt;code&gt;#8742&lt;/code&gt;&lt;/a&gt; do not overwrite comments and attrs in trait impl completion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8745&quot;&gt;&lt;code&gt;#8745&lt;/code&gt;&lt;/a&gt; support &quot;Go to type definition&quot; on types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8748&quot;&gt;&lt;code&gt;#8748&lt;/code&gt;&lt;/a&gt; fix &quot;Add missing fields&quot; panic on raw identifiers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8755&quot;&gt;&lt;code&gt;#8755&lt;/code&gt;&lt;/a&gt; direct people to the right repository for the user manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8773&quot;&gt;&lt;code&gt;#8773&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;SelfType&lt;/code&gt; when searching for usages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8777&quot;&gt;&lt;code&gt;#8777&lt;/code&gt;&lt;/a&gt; correctly escape characters in built-in macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8779&quot;&gt;&lt;code&gt;#8779&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t add space before quote in &quot;Join lines&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8776&quot;&gt;&lt;code&gt;#8776&lt;/code&gt;&lt;/a&gt; fix unnecessary recomputations due to macros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8427&quot;&gt;&lt;code&gt;#8427&lt;/code&gt;&lt;/a&gt; (first contribution) move CI to the &lt;code&gt;rust-cache&lt;/code&gt; action.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8714&quot;&gt;&lt;code&gt;#8714&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8765&quot;&gt;&lt;code&gt;#8765&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8768&quot;&gt;&lt;code&gt;#8768&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8769&quot;&gt;&lt;code&gt;#8769&lt;/code&gt;&lt;/a&gt; remove more &lt;code&gt;SyntaxRewriter&lt;/code&gt; usages and code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8716&quot;&gt;&lt;code&gt;#8716&lt;/code&gt;&lt;/a&gt; replace &lt;code&gt;memmap&lt;/code&gt; with &lt;code&gt;memmap2&lt;/code&gt; in &lt;code&gt;proc_macro_api&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8720&quot;&gt;&lt;code&gt;#8720&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8725&quot;&gt;&lt;code&gt;#8725&lt;/code&gt;&lt;/a&gt; add integrated completion benchmark.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8732&quot;&gt;&lt;code&gt;#8732&lt;/code&gt;&lt;/a&gt; refactor expansion queries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8743&quot;&gt;&lt;code&gt;#8743&lt;/code&gt;&lt;/a&gt; explain why docs should use have one sentence per line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8746&quot;&gt;&lt;code&gt;#8746&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t store call-site text offsets in hygiene info.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8280&quot;&gt;&lt;code&gt;#8280&lt;/code&gt;&lt;/a&gt; borrow text of immutable syntax nodes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8718&quot;&gt;&lt;code&gt;#8718&lt;/code&gt;&lt;/a&gt; upgrade to Rust 1.52.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8753&quot;&gt;&lt;code&gt;#8753&lt;/code&gt;&lt;/a&gt; expose cfg attrs from &lt;code&gt;hir::Crate&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8762&quot;&gt;&lt;code&gt;#8762&lt;/code&gt;&lt;/a&gt; disable broken incremental builds 😿.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8764&quot;&gt;&lt;code&gt;#8764&lt;/code&gt;&lt;/a&gt; add rust-analyzer version to panic context.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8770&quot;&gt;&lt;code&gt;#8770&lt;/code&gt;&lt;/a&gt; add failing test for the &quot;Pull assignment up&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8781&quot;&gt;&lt;code&gt;#8781&lt;/code&gt;&lt;/a&gt; rewrite &lt;strong&gt;Replace impl Trait&lt;/strong&gt; assist to use mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8782&quot;&gt;&lt;code&gt;#8782&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8783&quot;&gt;&lt;code&gt;#8783&lt;/code&gt;&lt;/a&gt; improve the &lt;code&gt;make&lt;/code&gt; API.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #75</title>
        <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/05/03/changelog-75.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/05/03/changelog-75.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/eb741e895f1a73420a401f2495c711afe37d9d19&quot;&gt;&lt;code&gt;eb741e8&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-05-03&quot;&gt;&lt;code&gt;2021-05-03&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8629&quot;&gt;&lt;code&gt;#8629&lt;/code&gt;&lt;/a&gt; (first contribution) allow pressing &lt;code&gt;|&lt;/code&gt; to surround closure arguments in VS Code:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/10530973/115778847-3c257e00-a385-11eb-8c80-e0db970747db.gif&quot; alt=&quot;115778847 3c257e00 a385 11eb 8c80 e0db970747db&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8617&quot;&gt;&lt;code&gt;#8617&lt;/code&gt;&lt;/a&gt; (first contribution) add option to opt out of smaller font size for inlay hints in VS Code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8660&quot;&gt;&lt;code&gt;#8660&lt;/code&gt;&lt;/a&gt; (first contribution) add &lt;code&gt;mutable&lt;/code&gt; semantic token modifier for &lt;code&gt;&amp;amp;mut self&lt;/code&gt; methods.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8624&quot;&gt;&lt;code&gt;#8624&lt;/code&gt;&lt;/a&gt; automatically detect rust library source file map.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8685&quot;&gt;&lt;code&gt;#8685&lt;/code&gt;&lt;/a&gt; parse const param defaults.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8693&quot;&gt;&lt;code&gt;#8693&lt;/code&gt;&lt;/a&gt; (first contribution) ensure that only one cache priming task can run at a time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8666&quot;&gt;&lt;code&gt;#8666&lt;/code&gt;&lt;/a&gt; report correct version string on Windows and Mac.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8670&quot;&gt;&lt;code&gt;#8670&lt;/code&gt;&lt;/a&gt; make error message in the status bar more useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8677&quot;&gt;&lt;code&gt;#8677&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;ServerNotInitialized&lt;/code&gt; according to the spec.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8679&quot;&gt;&lt;code&gt;#8679&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t show error message for a valid notification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8684&quot;&gt;&lt;code&gt;#8684&lt;/code&gt;&lt;/a&gt; correctly parse negated literals as const args.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8687&quot;&gt;&lt;code&gt;#8687&lt;/code&gt;&lt;/a&gt; improve unification of non-capturing closures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8692&quot;&gt;&lt;code&gt;#8692&lt;/code&gt;&lt;/a&gt; fix panic caused by new &lt;code&gt;Try&lt;/code&gt; trait definition on nightly toolchains.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8698&quot;&gt;&lt;code&gt;#8698&lt;/code&gt;&lt;/a&gt; search only crate-level prelude when looking for an item.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8708&quot;&gt;&lt;code&gt;#8708&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t duplicate &lt;code&gt;Progress::Finished&lt;/code&gt; for cache priming.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8661&quot;&gt;&lt;code&gt;#8661&lt;/code&gt;&lt;/a&gt; make normal release after a point release less annoying.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8668&quot;&gt;&lt;code&gt;#8668&lt;/code&gt;&lt;/a&gt; use more cross-platform utc &lt;code&gt;date&lt;/code&gt; argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8683&quot;&gt;&lt;code&gt;#8683&lt;/code&gt;&lt;/a&gt; ensure that client and server-side configs are not mixed up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8695&quot;&gt;&lt;code&gt;#8695&lt;/code&gt;&lt;/a&gt; fix naming polarity.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #74</title>
        <pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/04/26/changelog-74.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/04/26/changelog-74.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/617535393bb5ccc7adf0bac8a3b9a9c306454e79&quot;&gt;&lt;code&gt;6175353&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-04-26&quot;&gt;&lt;code&gt;2021-04-26&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8467&quot;&gt;&lt;code&gt;#8467&lt;/code&gt;&lt;/a&gt; (first contribution) add &quot;generate &lt;code&gt;Deref&lt;/code&gt; impl&quot; assist:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/5489149/115183917-9971b480-a091-11eb-98b0-d847543cde01.gif&quot; alt=&quot;115183917 9971b480 a091 11eb 98b0 d847543cde01&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature was included in the last week&amp;#8217;s changelog by mistake.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8317&quot;&gt;&lt;code&gt;#8317&lt;/code&gt;&lt;/a&gt; add &quot;Convert tuple to named struct&quot; assist:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/308347/116033884-ebef3a00-a66a-11eb-8e34-f95afe788a30.gif&quot; alt=&quot;116033884 ebef3a00 a66a 11eb 8e34 f95afe788a30&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8462&quot;&gt;&lt;code&gt;#8462&lt;/code&gt;&lt;/a&gt; expand macros in type positions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8621&quot;&gt;&lt;code&gt;#8621&lt;/code&gt;&lt;/a&gt; make sure nightly regressions don&amp;#8217;t break users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8570&quot;&gt;&lt;code&gt;#8570&lt;/code&gt;&lt;/a&gt; parse &lt;code&gt;rustc&lt;/code&gt; error messages in flycheck for non-Cargo build systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8595&quot;&gt;&lt;code&gt;#8595&lt;/code&gt;&lt;/a&gt; add support for remapping diagnostic paths.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8611&quot;&gt;&lt;code&gt;#8611&lt;/code&gt;&lt;/a&gt; (first contribution) add support for boolean values to &quot;Fill match arms&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8658&quot;&gt;&lt;code&gt;#8658&lt;/code&gt;&lt;/a&gt; (first contribution) check more carefully for cases when a rename can&amp;#8217;t be done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8582&quot;&gt;&lt;code&gt;#8582&lt;/code&gt;&lt;/a&gt; (first contribution) fix typo in &lt;code&gt;comparison&lt;/code&gt; semantic token type.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8600&quot;&gt;&lt;code&gt;#8600&lt;/code&gt;&lt;/a&gt; fix project loading hang.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8606&quot;&gt;&lt;code&gt;#8606&lt;/code&gt;&lt;/a&gt; fix &quot;Registering progress handler&quot; error.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8639&quot;&gt;&lt;code&gt;#8639&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;configuration.property&lt;/code&gt; startup error in VS Code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8643&quot;&gt;&lt;code&gt;#8643&lt;/code&gt;&lt;/a&gt; change version string to contain hash, build date and channel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8524&quot;&gt;&lt;code&gt;#8524&lt;/code&gt;&lt;/a&gt; fix &quot;Extract function&quot; with partial block selection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8540&quot;&gt;&lt;code&gt;#8540&lt;/code&gt;&lt;/a&gt; prevent renaming items that are not part of the workspace (LSP extension).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8565&quot;&gt;&lt;code&gt;#8565&lt;/code&gt;&lt;/a&gt; &quot;Fill match arms&quot; assist: add remaining arms for enum tuples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8577&quot;&gt;&lt;code&gt;#8577&lt;/code&gt;&lt;/a&gt; support crates/module roots in &lt;code&gt;external_docs&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8578&quot;&gt;&lt;code&gt;#8578&lt;/code&gt;&lt;/a&gt; fix inner attributes false positives in docs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8587&quot;&gt;&lt;code&gt;#8587&lt;/code&gt;&lt;/a&gt; fix some &lt;code&gt;find_path&lt;/code&gt; bugs around inner items (fixes auto-imports with macro calls).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8601&quot;&gt;&lt;code&gt;#8601&lt;/code&gt;&lt;/a&gt; trigger &quot;Inline variable&quot; assist on variable usages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8609&quot;&gt;&lt;code&gt;#8609&lt;/code&gt;&lt;/a&gt; parse outer attributes for &lt;code&gt;RecordPatField&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8620&quot;&gt;&lt;code&gt;#8620&lt;/code&gt;&lt;/a&gt; avoid unnecessary braces in &quot;Extract function&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8602&quot;&gt;&lt;code&gt;#8602&lt;/code&gt;&lt;/a&gt; fix panic in &quot;Replace derive with manual implementation&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8502&quot;&gt;&lt;code&gt;#8502&lt;/code&gt;&lt;/a&gt; document review requesting etiquette.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8527&quot;&gt;&lt;code&gt;#8527&lt;/code&gt;&lt;/a&gt; rewrite &quot;Introduce named lifetime&quot; assist to use mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8579&quot;&gt;&lt;code&gt;#8579&lt;/code&gt;&lt;/a&gt; fix &quot;Server status&quot; capability name in docs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8580&quot;&gt;&lt;code&gt;#8580&lt;/code&gt;&lt;/a&gt; remove confusion around &lt;code&gt;serverStatusNotification&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8584&quot;&gt;&lt;code&gt;#8584&lt;/code&gt;&lt;/a&gt; fix slightly broken test.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8586&quot;&gt;&lt;code&gt;#8586&lt;/code&gt;&lt;/a&gt; replace &lt;code&gt;SyntaxRewriter&lt;/code&gt; usage with &lt;code&gt;ted&lt;/code&gt; in &lt;code&gt;eager::eager_macro_recur&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8588&quot;&gt;&lt;code&gt;#8588&lt;/code&gt;&lt;/a&gt; add guidelines for release notes PR descriptions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8605&quot;&gt;&lt;code&gt;#8605&lt;/code&gt;&lt;/a&gt; automatically categorize the changelog entries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8591&quot;&gt;&lt;code&gt;#8591&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;SyntaxRewriter&lt;/code&gt; usage in &lt;code&gt;insert_use&lt;/code&gt; in favor of mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8638&quot;&gt;&lt;code&gt;#8638&lt;/code&gt;&lt;/a&gt; remove &lt;code&gt;SyntaxRewriter::from_fn&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8647&quot;&gt;&lt;code&gt;#8647&lt;/code&gt;&lt;/a&gt; split out &lt;code&gt;merge_imports&lt;/code&gt; module from &lt;code&gt;helpers::insert_use&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #73</title>
        <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/04/19/changelog-73.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/04/19/changelog-73.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/7570212a544b8e973a7d57be3657aae6465028a7&quot;&gt;&lt;code&gt;7570212&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-04-19&quot;&gt;&lt;code&gt;2021-04-19&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8467&quot;&gt;&lt;code&gt;#8467&lt;/code&gt;&lt;/a&gt; (first contribution) add &quot;generate &lt;code&gt;Deref&lt;/code&gt; impl&quot; assist:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/5489149/115183917-9971b480-a091-11eb-98b0-d847543cde01.gif&quot; alt=&quot;115183917 9971b480 a091 11eb 98b0 d847543cde01&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8476&quot;&gt;&lt;code&gt;#8476&lt;/code&gt;&lt;/a&gt; avoid checking the whole project during initial loading.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8481&quot;&gt;&lt;code&gt;#8481&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8494&quot;&gt;&lt;code&gt;#8494&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8498&quot;&gt;&lt;code&gt;#8498&lt;/code&gt;&lt;/a&gt; improve performance by delaying computation of fixes for diagnostics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8354&quot;&gt;&lt;code&gt;#8354&lt;/code&gt;&lt;/a&gt; distinguish between different operators in semantic highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8478&quot;&gt;&lt;code&gt;#8478&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t spam repeated error messages when &lt;code&gt;cargo check&lt;/code&gt; fails.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8496&quot;&gt;&lt;code&gt;#8496&lt;/code&gt;&lt;/a&gt; exclude &lt;code&gt;nightly&lt;/code&gt; tag from &lt;code&gt;git describe&lt;/code&gt; to really fix version string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8489&quot;&gt;&lt;code&gt;#8489&lt;/code&gt;&lt;/a&gt; indent block expressions on enter:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/1786438/114444123-cb38d600-9bce-11eb-8af2-8e8d1c0f9908.gif&quot; alt=&quot;114444123 cb38d600 9bce 11eb 8af2 8e8d1c0f9908&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8415&quot;&gt;&lt;code&gt;#8415&lt;/code&gt;&lt;/a&gt; fix faulty assertion when extracting function with macro call.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8432&quot;&gt;&lt;code&gt;#8432&lt;/code&gt;&lt;/a&gt; consider outer scopes' &lt;code&gt;#[allow]&lt;/code&gt;s in &lt;code&gt;decl_check&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8526&quot;&gt;&lt;code&gt;#8526&lt;/code&gt;&lt;/a&gt; do not show flyimports in trait or impl declarations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8510&quot;&gt;&lt;code&gt;#8510&lt;/code&gt;&lt;/a&gt; move cursor position when using item movers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8536&quot;&gt;&lt;code&gt;#8536&lt;/code&gt;&lt;/a&gt; (first contribution) slightly improve status messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8543&quot;&gt;&lt;code&gt;#8543&lt;/code&gt;&lt;/a&gt; (first contribution) fix &quot;Fill match arms&quot; issue with single-element tuples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8545&quot;&gt;&lt;code&gt;#8545&lt;/code&gt;&lt;/a&gt; fix primitive shadowing with inner items.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8539&quot;&gt;&lt;code&gt;#8539&lt;/code&gt;&lt;/a&gt; do not propose inherent traits in flyimports and import assists.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8546&quot;&gt;&lt;code&gt;#8546&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;CallInfo&lt;/code&gt; for unclosed call expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8550&quot;&gt;&lt;code&gt;#8550&lt;/code&gt;&lt;/a&gt; handle extended key-value attributes in MBE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8560&quot;&gt;&lt;code&gt;#8560&lt;/code&gt;&lt;/a&gt; (first contribution) correctly escape characters in doc comments when passed through macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8561&quot;&gt;&lt;code&gt;#8561&lt;/code&gt;&lt;/a&gt; accept &lt;code&gt;E&amp;lt;error_number&amp;gt;&lt;/code&gt; notation in doctests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8564&quot;&gt;&lt;code&gt;#8564&lt;/code&gt;&lt;/a&gt; expand &lt;code&gt;global_asm!&lt;/code&gt; to nothing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8569&quot;&gt;&lt;code&gt;#8569&lt;/code&gt;&lt;/a&gt; support inherent impls in unnamed consts.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8483&quot;&gt;&lt;code&gt;#8483&lt;/code&gt;&lt;/a&gt; clarify who rls-2.0 wg really is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8499&quot;&gt;&lt;code&gt;#8499&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t use &lt;code&gt;#[should_panic]&lt;/code&gt; for tests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8500&quot;&gt;&lt;code&gt;#8500&lt;/code&gt;&lt;/a&gt; fix flakiness of &quot;accidentally quadratic?&quot; test.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8507&quot;&gt;&lt;code&gt;#8507&lt;/code&gt;&lt;/a&gt; follow test style guide in &lt;code&gt;typing.rs&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8514&quot;&gt;&lt;code&gt;#8514&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8515&quot;&gt;&lt;code&gt;#8515&lt;/code&gt;&lt;/a&gt; add more profiling spans to type inference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8549&quot;&gt;&lt;code&gt;#8549&lt;/code&gt;&lt;/a&gt; fix &lt;code&gt;TestDB::module_at_position&lt;/code&gt; with submodules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8551&quot;&gt;&lt;code&gt;#8551&lt;/code&gt;&lt;/a&gt; (first contribution) nail down &lt;code&gt;rowan&lt;/code&gt; version.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #72</title>
        <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/04/12/changelog-72.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/04/12/changelog-72.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/7be06139b632ee615fc18af04dd67947e2c794b2&quot;&gt;&lt;code&gt;7be0613&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-04-12&quot;&gt;&lt;code&gt;2021-04-12&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8388&quot;&gt;&lt;code&gt;#8388&lt;/code&gt;&lt;/a&gt; auto-close blocks when typing &lt;code&gt;{&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/1786438/114024061-e8d70a00-9873-11eb-89d6-c50296cbf495.gif&quot; alt=&quot;114024061 e8d70a00 9873 11eb 89d6 c50296cbf495&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8375&quot;&gt;&lt;code&gt;#8375&lt;/code&gt;&lt;/a&gt; show errors from &lt;code&gt;cargo metadata&lt;/code&gt; and initial &lt;code&gt;cargo check&lt;/code&gt; in the status bar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8410&quot;&gt;&lt;code&gt;#8410&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;InsertReplaceSupport&lt;/code&gt; capability&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8433&quot;&gt;&lt;code&gt;#8433&lt;/code&gt;&lt;/a&gt; intern lots of things (great for memory usage):&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/308347/114185930-f1504300-994e-11eb-8e99-7925c54ab3c3.png&quot; alt=&quot;114185930 f1504300 994e 11eb 8e99 7925c54ab3c3&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8406&quot;&gt;&lt;code&gt;#8406&lt;/code&gt;&lt;/a&gt; improve indexing of impls (great for analysis speed):&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/308347/114210350-595f5300-9968-11eb-87aa-b7835faafdb8.png&quot; alt=&quot;114210350 595f5300 9968 11eb 87aa b7835faafdb8&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8355&quot;&gt;&lt;code&gt;#8355&lt;/code&gt;&lt;/a&gt; do not drop errors from &lt;code&gt;cargo metadata&lt;/code&gt; and &lt;code&gt;cargo check&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8339&quot;&gt;&lt;code&gt;#8339&lt;/code&gt;&lt;/a&gt; fix &quot;Extract variable&quot; assist in guards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8245&quot;&gt;&lt;code&gt;#8245&lt;/code&gt;&lt;/a&gt; properly resolve intra-doc links in hover and goto_definition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8371&quot;&gt;&lt;code&gt;#8371&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t use &lt;code&gt;HirDisplayWrapper&lt;/code&gt; when displaying &lt;code&gt;SourceCode&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8381&quot;&gt;&lt;code&gt;#8381&lt;/code&gt;&lt;/a&gt; lower attributes on tuple fields.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8386&quot;&gt;&lt;code&gt;#8386&lt;/code&gt;&lt;/a&gt; avoid O(n²) when constructing &lt;code&gt;AttrSourceMap&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8389&quot;&gt;&lt;code&gt;#8389&lt;/code&gt;&lt;/a&gt; do not import on the fly inside record literal fields.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8390&quot;&gt;&lt;code&gt;#8390&lt;/code&gt;&lt;/a&gt; support trait impls in unnamed consts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8392&quot;&gt;&lt;code&gt;#8392&lt;/code&gt;&lt;/a&gt; (first contribution) add space after lifetime in &quot;Expand macro&quot; output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8394&quot;&gt;&lt;code&gt;#8394&lt;/code&gt;&lt;/a&gt; infer variants through type aliased enums.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8397&quot;&gt;&lt;code&gt;#8397&lt;/code&gt;&lt;/a&gt; (first contribution) improve &quot;still loading&quot; error message.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8412&quot;&gt;&lt;code&gt;#8412&lt;/code&gt;&lt;/a&gt; emit folding ranges for multiline array literals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8207&quot;&gt;&lt;code&gt;#8207&lt;/code&gt;&lt;/a&gt; offer &quot;Remove `dbg!`&quot; assist on empty calls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8421&quot;&gt;&lt;code&gt;#8421&lt;/code&gt;&lt;/a&gt; reduce allocations in &quot;Expand macro&quot; formatter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8426&quot;&gt;&lt;code&gt;#8426&lt;/code&gt;&lt;/a&gt; track recursion limit when expanding custom derive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8431&quot;&gt;&lt;code&gt;#8431&lt;/code&gt;&lt;/a&gt; add trait member token modifier to associated types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8440&quot;&gt;&lt;code&gt;#8440&lt;/code&gt;&lt;/a&gt; fix crash on &lt;code&gt;syn&lt;/code&gt; involving lifetimes returned by Chalk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8444&quot;&gt;&lt;code&gt;#8444&lt;/code&gt;&lt;/a&gt; shrink &lt;code&gt;unlinked-file&lt;/code&gt; diagnostic to 3 characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8447&quot;&gt;&lt;code&gt;#8447&lt;/code&gt;&lt;/a&gt; resolve prelude and crate root names in the root &lt;code&gt;DefMap&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8450&quot;&gt;&lt;code&gt;#8450&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t ignore unnamed consts when looking for definitions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8457&quot;&gt;&lt;code&gt;#8457&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t assume wrong binary operator return type when primitives are involved.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8436&quot;&gt;&lt;code&gt;#8436&lt;/code&gt;&lt;/a&gt; fix &quot;Extract function&quot;'s mutability of variables outliving the body.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8463&quot;&gt;&lt;code&gt;#8463&lt;/code&gt;&lt;/a&gt; support macros in pattern position.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8334&quot;&gt;&lt;code&gt;#8334&lt;/code&gt;&lt;/a&gt; intern and shrink more data to reduce memory usage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8337&quot;&gt;&lt;code&gt;#8337&lt;/code&gt;&lt;/a&gt; explain &quot;extract if condition&quot; refactoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8326&quot;&gt;&lt;code&gt;#8326&lt;/code&gt;&lt;/a&gt; rewrite &quot;Reorder fields&quot; assist to use mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8343&quot;&gt;&lt;code&gt;#8343&lt;/code&gt;&lt;/a&gt; document hypothetical completion problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8348&quot;&gt;&lt;code&gt;#8348&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8353&quot;&gt;&lt;code&gt;#8353&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8359&quot;&gt;&lt;code&gt;#8359&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8366&quot;&gt;&lt;code&gt;#8366&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8419&quot;&gt;&lt;code&gt;#8419&lt;/code&gt;&lt;/a&gt; type inference now uses Chalk&amp;#8217;s types everywhere.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8350&quot;&gt;&lt;code&gt;#8350&lt;/code&gt;&lt;/a&gt; prepare to store &lt;code&gt;OpQueue&lt;/code&gt; results in the queue itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8364&quot;&gt;&lt;code&gt;#8364&lt;/code&gt;&lt;/a&gt; (first contribution) slightly reduce the memory usage of some `enum`s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8374&quot;&gt;&lt;code&gt;#8374&lt;/code&gt;&lt;/a&gt; intern &lt;code&gt;TypeRef&lt;/code&gt;s stored in &lt;code&gt;Body&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8376&quot;&gt;&lt;code&gt;#8376&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8380&quot;&gt;&lt;code&gt;#8380&lt;/code&gt;&lt;/a&gt; infer: remove redundant &lt;code&gt;record_field_resolutions&lt;/code&gt; and &lt;code&gt;record_pat_field_resolutions&lt;/code&gt; fields.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8379&quot;&gt;&lt;code&gt;#8379&lt;/code&gt;&lt;/a&gt; document broken windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8429&quot;&gt;&lt;code&gt;#8429&lt;/code&gt;&lt;/a&gt; add documentation and test for &lt;code&gt;//!&lt;/code&gt; doc comment continuation on Enter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8384&quot;&gt;&lt;code&gt;#8384&lt;/code&gt;&lt;/a&gt; use linear regression to catch accidentally super-linear performance regressions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #71</title>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/04/05/changelog-71.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/04/05/changelog-71.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/19e09a4a54c75312aeaac04577f2d0e067463ab6&quot;&gt;&lt;code&gt;19e09a4&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-04-05&quot;&gt;&lt;code&gt;2021-04-05&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8231&quot;&gt;&lt;code&gt;#8231&lt;/code&gt;&lt;/a&gt; (first contribution) fold consecutive consts and statics:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/48062697/112835083-b584c600-9090-11eb-968a-a95f4e9c1f6c.gif&quot; alt=&quot;112835083 b584c600 9090 11eb 968a a95f4e9c1f6c&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8295&quot;&gt;&lt;code&gt;#8295&lt;/code&gt;&lt;/a&gt; (first contribution) add Convert &lt;code&gt;Into&lt;/code&gt; to &lt;code&gt;From&lt;/code&gt; assist:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/556490/113420108-9ce21c00-93c0-11eb-8c49-80b5fb189284.gif&quot; alt=&quot;113420108 9ce21c00 93c0 11eb 8c49 80b5fb189284&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8210&quot;&gt;&lt;code&gt;#8210&lt;/code&gt;&lt;/a&gt; add &quot;Extract type alias&quot; assist:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/308347/113543910-0005c580-95f0-11eb-8992-d6dffc846c2d.gif&quot; alt=&quot;113543910 0005c580 95f0 11eb 8992 d6dffc846c2d&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8267&quot;&gt;&lt;code&gt;#8267&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8274&quot;&gt;&lt;code&gt;#8274&lt;/code&gt;&lt;/a&gt; add GIFs of most features to the manual.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8240&quot;&gt;&lt;code&gt;#8240&lt;/code&gt;&lt;/a&gt; add semantic highlighting modifier for trait items and trait method calls.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8222&quot;&gt;&lt;code&gt;#8222&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t mark unlinked file diagnostic as unused.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8246&quot;&gt;&lt;code&gt;#8246&lt;/code&gt;&lt;/a&gt; (first contribution) update VIM YCM installation instructions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8250&quot;&gt;&lt;code&gt;#8250&lt;/code&gt;&lt;/a&gt; classify associated types in paths more accurately.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8256&quot;&gt;&lt;code&gt;#8256&lt;/code&gt;&lt;/a&gt; make &quot;Move item&quot; commands work in more cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8261&quot;&gt;&lt;code&gt;#8261&lt;/code&gt;&lt;/a&gt; fix expansion of OR-patterns in match check.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8266&quot;&gt;&lt;code&gt;#8266&lt;/code&gt;&lt;/a&gt; fix generic argument lowering in qualified trait casts (helps with &lt;code&gt;.await&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8271&quot;&gt;&lt;code&gt;#8271&lt;/code&gt;&lt;/a&gt; fix error parsing `u128`s in proc macro output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8276&quot;&gt;&lt;code&gt;#8276&lt;/code&gt;&lt;/a&gt; lower inner items defined in macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8283&quot;&gt;&lt;code&gt;#8283&lt;/code&gt;&lt;/a&gt; resolve associated types at the IDE layer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8265&quot;&gt;&lt;code&gt;#8265&lt;/code&gt;&lt;/a&gt; improve rustc diagnostic mapping.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8285&quot;&gt;&lt;code&gt;#8285&lt;/code&gt;&lt;/a&gt; improve typechecking performance by avoiding re-checking unchanged obligations in an accidentally quadratic way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8284&quot;&gt;&lt;code&gt;#8284&lt;/code&gt;&lt;/a&gt; reduce memory usage by using global &lt;code&gt;Arc&lt;/code&gt;-based interning.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8297&quot;&gt;&lt;code&gt;#8297&lt;/code&gt;&lt;/a&gt; only populate prelude for crate-level `DefMap`s.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8304&quot;&gt;&lt;code&gt;#8304&lt;/code&gt;&lt;/a&gt; support the new &lt;code&gt;panic!()&lt;/code&gt; macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8305&quot;&gt;&lt;code&gt;#8305&lt;/code&gt;&lt;/a&gt; fix &quot;Join lines&quot; panic when triggered on an empty last line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8307&quot;&gt;&lt;code&gt;#8307&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;include!&lt;/code&gt; work for empty files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8318&quot;&gt;&lt;code&gt;#8318&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;shrink_to_fit&lt;/code&gt; to reduce &lt;code&gt;DefMap&lt;/code&gt; sizes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8324&quot;&gt;&lt;code&gt;#8324&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;Body::shrink_to_fit&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8329&quot;&gt;&lt;code&gt;#8329&lt;/code&gt;&lt;/a&gt; (first contribution) fix &lt;code&gt;moveItem&lt;/code&gt; method name in the docs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8332&quot;&gt;&lt;code&gt;#8332&lt;/code&gt;&lt;/a&gt; show error when &lt;code&gt;rustfmt&lt;/code&gt; component is unavailable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8235&quot;&gt;&lt;code&gt;#8235&lt;/code&gt;&lt;/a&gt; make &lt;code&gt;--log-file&lt;/code&gt; more discoverable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8241&quot;&gt;&lt;code&gt;#8241&lt;/code&gt;&lt;/a&gt; clean up &lt;code&gt;hprof&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8244&quot;&gt;&lt;code&gt;#8244&lt;/code&gt;&lt;/a&gt; track missing &lt;code&gt;.check_cancelled&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8247&quot;&gt;&lt;code&gt;#8247&lt;/code&gt;&lt;/a&gt; ensure that runaway type-inference doesn&amp;#8217;t block the main loop.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8254&quot;&gt;&lt;code&gt;#8254&lt;/code&gt;&lt;/a&gt; switch from CLI to internal benchmarking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8255&quot;&gt;&lt;code&gt;#8255&lt;/code&gt;&lt;/a&gt; touch up dev readme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8262&quot;&gt;&lt;code&gt;#8262&lt;/code&gt;&lt;/a&gt; revive &lt;code&gt;google_cpu_profile&lt;/code&gt; infra.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8186&quot;&gt;&lt;code&gt;#8186&lt;/code&gt;&lt;/a&gt; lower traits to &lt;code&gt;TraitRef&lt;/code&gt; instead of &lt;code&gt;TypeRef&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8269&quot;&gt;&lt;code&gt;#8269&lt;/code&gt;&lt;/a&gt; document semantics of missing names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8286&quot;&gt;&lt;code&gt;#8286&lt;/code&gt;&lt;/a&gt; include remaining memory in memory usage stats.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8292&quot;&gt;&lt;code&gt;#8292&lt;/code&gt;&lt;/a&gt; document &lt;code&gt;Cargo.lock&lt;/code&gt; maintenance process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8293&quot;&gt;&lt;code&gt;#8293&lt;/code&gt;&lt;/a&gt; document style for helper functions and variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8303&quot;&gt;&lt;code&gt;#8303&lt;/code&gt;&lt;/a&gt; allow interning strings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8309&quot;&gt;&lt;code&gt;#8309&lt;/code&gt;&lt;/a&gt; introduce &lt;code&gt;GenericArg&lt;/code&gt; like in &lt;code&gt;chalk&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8315&quot;&gt;&lt;code&gt;#8315&lt;/code&gt;&lt;/a&gt; try to further reduce &lt;code&gt;ItemTree&lt;/code&gt; size.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8323&quot;&gt;&lt;code&gt;#8323&lt;/code&gt;&lt;/a&gt; only remember blocks that have a DefMap.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8327&quot;&gt;&lt;code&gt;#8327&lt;/code&gt;&lt;/a&gt; move &lt;code&gt;Ty&lt;/code&gt; creation methods out of &lt;code&gt;Ty&lt;/code&gt; (&lt;code&gt;chalk&lt;/code&gt; move preparation).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8328&quot;&gt;&lt;code&gt;#8328&lt;/code&gt;&lt;/a&gt; move things in &lt;code&gt;hir_ty&lt;/code&gt; into submodules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8333&quot;&gt;&lt;code&gt;#8333&lt;/code&gt;&lt;/a&gt; allow skipping type inference in &lt;code&gt;analysis-stats&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #70</title>
        <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2021/03/29/changelog-70.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2021/03/29/changelog-70.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/01dc53a31c39fe754c7228646c456325e49e8d09&quot;&gt;&lt;code&gt;01dc53a&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2021-03-29&quot;&gt;&lt;code&gt;2021-03-29&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sponsors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#sponsors&quot;&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;strong&gt;Become a sponsor:&lt;/strong&gt; On &lt;a href=&quot;https://opencollective.com/rust-analyzer/&quot;&gt;OpenCollective&lt;/a&gt; or
&lt;a href=&quot;https://github.com/sponsors/rust-analyzer&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8054&quot;&gt;&lt;code&gt;#8054&lt;/code&gt;&lt;/a&gt; add Move item commands (LSP extension):&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/308347/112793739-7e052200-906e-11eb-9ed4-1b396ef7d6dc.gif&quot; alt=&quot;112793739 7e052200 906e 11eb 9ed4 1b396ef7d6dc&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/308347/112793747-83626c80-906e-11eb-9a96-a075e8d38d6e.gif&quot; alt=&quot;112793747 83626c80 906e 11eb 9a96 a075e8d38d6e&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8178&quot;&gt;&lt;code&gt;#8178&lt;/code&gt;&lt;/a&gt; show item info when hovering intra-doc links:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/3757771/112197618-91e2fb00-8c0c-11eb-9edc-a7923214d2b6.gif&quot; alt=&quot;112197618 91e2fb00 8c0c 11eb 9edc a7923214d2b6&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8056&quot;&gt;&lt;code&gt;#8056&lt;/code&gt;&lt;/a&gt; on completion, take into account whether types unify:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/22216761/111338556-46d94e80-8634-11eb-9936-2b20eb9e6756.png&quot; alt=&quot;111338556 46d94e80 8634 11eb 9936 2b20eb9e6756&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/22216761/111338598-4e005c80-8634-11eb-92e0-69c2c1cda6fc.png&quot; alt=&quot;111338598 4e005c80 8634 11eb 92e0 69c2c1cda6fc&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8212&quot;&gt;&lt;code&gt;#8212&lt;/code&gt;&lt;/a&gt; implement basic macros 2.0 support:&lt;/p&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/11014119/112712565-6eb99380-8f0b-11eb-88de-5d7f974dfe6d.png&quot; alt=&quot;112712565 6eb99380 8f0b 11eb 88de 5d7f974dfe6d&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8156&quot;&gt;&lt;code&gt;#8156&lt;/code&gt;&lt;/a&gt; correctly lower `TraitRef`s with default params.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8144&quot;&gt;&lt;code&gt;#8144&lt;/code&gt;&lt;/a&gt; (first contribution) fix crash when trying to display closure types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8142&quot;&gt;&lt;code&gt;#8142&lt;/code&gt;&lt;/a&gt; hide incorrect ref match completions for struct fields/methods.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8138&quot;&gt;&lt;code&gt;#8138&lt;/code&gt;&lt;/a&gt; set up a search scope when searching for MBE macro references.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8159&quot;&gt;&lt;code&gt;#8159&lt;/code&gt;&lt;/a&gt; try to ignore proc-macro stdout to prevent IPC crashes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8182&quot;&gt;&lt;code&gt;#8182&lt;/code&gt;&lt;/a&gt; trim down IPC JSON size.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8177&quot;&gt;&lt;code&gt;#8177&lt;/code&gt;&lt;/a&gt; limit hints size by default.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8183&quot;&gt;&lt;code&gt;#8183&lt;/code&gt;&lt;/a&gt; fix spurious &quot;Missing command&quot; lenses on macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8168&quot;&gt;&lt;code&gt;#8168&lt;/code&gt;&lt;/a&gt; fix &quot;Convert to guarded return&quot; for mutable bindings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8189&quot;&gt;&lt;code&gt;#8189&lt;/code&gt;&lt;/a&gt; document &lt;code&gt;unlinked-file&lt;/code&gt; diagnostic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/7907&quot;&gt;&lt;code&gt;#7907&lt;/code&gt;&lt;/a&gt; take visibility into account for autoderef.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8194&quot;&gt;&lt;code&gt;#8194&lt;/code&gt;&lt;/a&gt; finally fix version string display in release binaries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8206&quot;&gt;&lt;code&gt;#8206&lt;/code&gt;&lt;/a&gt; ignore main functions outside of the root module.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8201&quot;&gt;&lt;code&gt;#8201&lt;/code&gt;&lt;/a&gt; fix recursive macro statements expansion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8213&quot;&gt;&lt;code&gt;#8213&lt;/code&gt;&lt;/a&gt; include const generic in &lt;code&gt;impl&lt;/code&gt; generation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8214&quot;&gt;&lt;code&gt;#8214&lt;/code&gt;&lt;/a&gt; mention the &lt;code&gt;rustup&lt;/code&gt; component in the installation instructions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8221&quot;&gt;&lt;code&gt;#8221&lt;/code&gt;&lt;/a&gt; prefer adding &lt;code&gt;mod&lt;/code&gt; declaration to &lt;code&gt;lib.rs&lt;/code&gt; over &lt;code&gt;file.rs&lt;/code&gt; in &lt;code&gt;unlinked-file&lt;/code&gt; fix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8141&quot;&gt;&lt;code&gt;#8141&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t suggest long looping paths for imports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8155&quot;&gt;&lt;code&gt;#8155&lt;/code&gt;&lt;/a&gt; fix confusion between functions and parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8191&quot;&gt;&lt;code&gt;#8191&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8209&quot;&gt;&lt;code&gt;#8209&lt;/code&gt;&lt;/a&gt; fix slight memory leak in syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8136&quot;&gt;&lt;code&gt;#8136&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8190&quot;&gt;&lt;code&gt;#8190&lt;/code&gt;&lt;/a&gt; introduce &lt;code&gt;QuantifiedWhereClause&lt;/code&gt; and &lt;code&gt;DynTy&lt;/code&gt; analogous to Chalk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8139&quot;&gt;&lt;code&gt;#8139&lt;/code&gt;&lt;/a&gt; align &lt;code&gt;Canonical&lt;/code&gt; and &lt;code&gt;InEnvironment&lt;/code&gt; with the Chalk versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8154&quot;&gt;&lt;code&gt;#8154&lt;/code&gt;&lt;/a&gt; rewrite &quot;Merge use trees&quot; assist using mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8165&quot;&gt;&lt;code&gt;#8165&lt;/code&gt;&lt;/a&gt; tweak assist API to fit mutable syntax trees.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8169&quot;&gt;&lt;code&gt;#8169&lt;/code&gt;&lt;/a&gt; make more use of the HIR in &lt;code&gt;rename::rename_to_self&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8170&quot;&gt;&lt;code&gt;#8170&lt;/code&gt;&lt;/a&gt; merge bang-macros and derives in name resolution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8187&quot;&gt;&lt;code&gt;#8187&lt;/code&gt;&lt;/a&gt; sweep the new &lt;code&gt;TraitEnvironmentQuery&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8145&quot;&gt;&lt;code&gt;#8145&lt;/code&gt;&lt;/a&gt; document our security stance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/8146&quot;&gt;&lt;code&gt;#8146&lt;/code&gt;&lt;/a&gt; document patch policy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
  </channel>
</rss>
